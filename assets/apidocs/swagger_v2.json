{
  "swagger": "2.0",
  "info": {
    "version": "2.0.0",
    "title": "NOVELCovid/API",
    "description": "Covid19 Third Party API for Global Information",
    "license": {
      "name": "GNU V3",
      "url": "https://github.com/NovelCOVID/API/blob/master/LICENSE"
    }
  },
  "schemes": [
    "https",
    "http"
  ],
  "host": "corona.lmao.ninja",
  "basePath": "/",
  "tags": [
    {
      "name": "default"
    },
    {
      "name": "Countries",
      "description": "(Data from Worldometers)"
    },
    {
      "name": "JHUCSSE",
      "description": "(Data from Johns Hopkins University)"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v2/all": {
      "get": {
        "parameters": [
          {
            "name": "yesterday",
            "in": "query",
            "required": false,
            "enum": [
              "true",
              "false",
              "1",
              "0"
            ],
            "description": "For this parameter you can show yesterday data",
            "type": "string"
          }
        ],
        "summary": "Get Global Totals for Actual and Yesterday Data",
        "description": "Get global stats: cases, deaths, recovered, time last updated, and active cases. Data is updated every 10 minutes",
        "responses": {
          "200": {
            "description": "Status OK"
          }
        }
      }
    },
    "/v2/states": {
      "get": {
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "enum": [
              "cases",
              "todayCases",
              "deaths",
              "todayDeaths",
              "active"
            ],
            "description": "For this parameter you can provide a key from the country model (e.g. cases, todayCases, deaths, active, etc) to sort the states from greatest to least, depending on the key.",
            "type": "string"
          },
          {
            "name": "yesterday",
            "in": "query",
            "required": false,
            "enum": [
              "true",
              "false",
              "1",
              "0"
            ],
            "description": "For this parameter you can show yesterday data",
            "type": "string"
          }
        ],
        "summary": "Get US State Totals",
        "description": "Get stats on United States of America States with COVID-19, including cases, new cases, deaths, new deaths, and active cases. Data is updated every 10 minutes",
        "responses": {
          "200": {
            "description": "Status OK"
          }
        }
      }
    },
    "/v2/states/{states}": {
      "get": {
        "parameters": [
          {
            "name": "states",
            "in": "path",
            "required": true,
            "description": "state name or comma separated names spelled correctly",
            "type": "string"
          },
          {
            "name": "yesterday",
            "in": "query",
            "required": false,
            "enum": [
              "true",
              "false",
              "1",
              "0"
            ],
            "description": "For this parameter you can show yesterday data",
            "type": "string"
          }
        ],
        "summary": "Get US State Totals for a specific state",
        "description": "Get cases, new cases, deaths, new deaths, and active cases for a state. Data is updated every 10 minutes",
        "responses": {
          "200": {
            "description": "Status OK"
          }
        }
      }
    },
    "/v2/countries": {
      "get": {
        "tags": [
          "Countries"
        ],
        "parameters": [
          {
            "name": "yesterday",
            "in": "query",
            "required": false,
            "enum": [
              "true",
              "false",
              "1",
              "0"
            ],
            "description": "For this parameter you can show yesterday data",
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "enum": [
              "cases",
              "todayCases",
              "deaths",
              "todayDeaths",
              "recovered",
              "active",
              "critical",
              "casesPerOneMillion",
              "deathsPerOneMillion"
            ],
            "description": "For this parameter you can provide a key from the country model (e.g. cases, todayCases, deaths, recovered, active, etc) to sort the countries from greatest to least, depending on the key",
            "type": "string"
          }
        ],
        "summary": "Get All Countries Totals for Actual and Yesterday Data",
        "description": "Returns a JSON array with an element for each country that has stats available. This includes iso codes, lat/long, a link to the country flag, cases, new cases, deaths, new deaths, recovered, active cases, critical cases, and cases/deaths per one million people. Data is updated every 10 minutes",
        "responses": {
          "200": {
            "description": "Status OK",
            "schema": {
              "$ref": "#/definitions/countries"
            }
          }
        }
      }
    },
    "/v2/countries/{query}": {
      "get": {
        "tags": [
          "Countries"
        ],
        "parameters": [
          {
            "name": "yesterday",
            "in": "query",
            "required": false,
            "enum": [
              "true",
              "false",
              "1",
              "0"
            ],
            "description": "For this parameter you can show yesterday data",
            "type": "string"
          },
          {
            "name": "strict",
            "in": "query",
            "required": false,
            "enum": [
              "true",
              "false"
            ],
            "description": "Defaults to true. Setting to false gives you the ability to fuzzy search countries. Example Oman vs. rOMANia",
            "type": "string"
          },
          {
            "name": "query",
            "in": "path",
            "required": true,
            "description": "For this parameter you can use Country Name && Country Id && ISOs (ISO 2 | ISO 3) 3166 Country Standards",
            "type": "string"
          }
        ],
        "summary": "Get a Specific Country's Totals for Actual and Yesterday Data",
        "description": "Get the same data from the /countries endpoint, but filter down to a specific country.",
        "responses": {
          "200": {
            "description": "Status OK",
            "schema": {
              "$ref": "#/definitions/country"
            }
          }
        }
      }
    },
    "/v2/countries/{country,country,...}": {
      "get": {
        "tags": [
          "Countries"
        ],
        "parameters": [
          {
            "name": "yesterday",
            "in": "query",
            "required": false,
            "enum": [
              "true",
              "false",
              "1",
              "0"
            ],
            "description": "For this parameter you can show yesterday data",
            "type": "string"
          },
          {
            "name": "query",
            "in": "path",
            "required": true,
            "description": "For this parameter you can use multiple Country Names && Country Ids && ISOs (ISO 2 | ISO 3) 3166 Country Standards separated by commas",
            "type": "string"
          }
        ],
        "summary": "Get a Specific Country's Totals for Actual and Yesterday Data",
        "description": "Get the same data from the /countries endpoint, but filter down to multiple specific countries. Data is updated every 10 minutes",
        "responses": {
          "200": {
            "description": "Status Ok"
          }
        }
      }
    },
    "/v2/jhucsse": {
      "get": {
        "tags": [
          "JHUCSSE"
        ],
        "summary": "Get All JHU CSSE",
        "description": "Get JHU CSSE Data. This includes confirmed cases, deaths, recovered, and coordinates. Data is updated every 10 minutes",
        "responses": {
          "200": {
            "description": "Status Ok"
          }
        }
      }
    },
    "/v2/jhucsse/counties": {
      "get": {
        "tags": [
          "JHUCSSE"
        ],
        "summary": "Get All US County Data from JHU CSSE",
        "description": "Get JHU CSSE county specific data. This includes confirmed cases, deaths, recovered, and coordinates. Data is updated every 10 minutes",
        "responses": {
          "200": {
            "description": "Status Ok",
            "schema": {
              "$ref": "#/definitions/counties"
            }
          }
        }
      }
    },
    "/v2/jhucsse/counties/countyName": {
      "get": {
        "tags": [
          "JHUCSSE"
        ],
        "parameters": [
          {
            "name": "countyName",
            "in": "path",
            "required": true,
            "description": "For this parameter you can use the name of any county from the /counties endpoint",
            "type": "string"
          }
        ],
        "summary": "Get county data for a single county from JHU CSSE",
        "description": "Get JHU CSSE county specific data. This includes confirmed cases, deaths, recovered, and coordinates. Returns array because there are duplicate names. Data is updated every 10 minutes",
        "responses": {
          "200": {
            "description": "Status Ok",
            "schema": {
              "$ref": "#/definitions/counties"
            }
          }
        }
      }
    },
    "/v2/historical": {
      "get": {
        "tags": [
          "JHUCSSE"
        ],
        "parameters": [
          {
            "name": "lastdays",
            "in": "query",
            "required": false,
            "default": 30,
            "description": "number of days you want the data to go back to. Default is 30. Use all for full data set. Ex: 15, all, 24",
            "type": "string"
          }
        ],
        "summary": "Get Historical Data",
        "description": "Get time series info from the JHU CSSE Data Repository. Every date since 1/22/20 has an entry tracking deaths, cases, and recoveries for each country. Updated each day at 23:59 UTC. Data is updated every 10 minutes",
        "responses": {
          "200": {
            "description": "Status Ok",
            "schema": {
              "$ref": "#/definitions/countryHistorical"
            }
          }
        }
      }
    },
    "/v2/historical/usacounties": {
      "get": {
        "tags": [
          "JHUCSSE"
        ],
        "summary": "Get All Possible USA states to query /historical/usacounties/{state} endpoint with.",
        "description": "Returns a list of states that are available for querying the /historical/usacounties/{state} endpoint with.",
        "responses": {
          "200": {
            "description": "Status Ok"
          }
        }
      }
    },
    "/v2/historical/usacounties/{state}": {
      "get": {
        "tags": [
          "JHUCSSE"
        ],
        "parameters": [
          {
            "name": "state",
            "in": "path",
            "required": true,
            "description": "A valid US state name, validated in the array returned from /v2/historical/usacounties",
            "type": "string"
          },
          {
            "name": "lastdays",
            "in": "query",
            "required": false,
            "default": 30,
            "description": "number of days you want the data to go back to. Default is 30. Use all for full data set. Ex: 15, all, 24",
            "type": "string"
          }
        ],
        "summary": "Get Historical Data for all Counties in a Specified State",
        "description": "Get time series info from the JHU CSSE Data Repository. Every date since 1/22/20 has an entry tracking deaths and cases. Updated each day at 23:59 UTC. Data is updated every 10 minutes",
        "responses": {
          "200": {
            "description": "Status Ok",
            "schema": {
              "$ref": "#/definitions/usaCounties"
            }
          }
        }
      }
    },
    "/v2/historical/{query}": {
      "get": {
        "tags": [
          "JHUCSSE"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "path",
            "required": true,
            "description": "For this parameter you can use Country Name && Country Id && ISOs (ISO 2 | ISO 3) 3166 Country Standards",
            "type": "string"
          },
          {
            "name": "lastdays",
            "in": "query",
            "required": false,
            "default": 30,
            "description": "number of days you want the data to go back to. Default is 30. Use all for full data set. Ex: 15, all, 24",
            "type": "string"
          }
        ],
        "summary": "Get Historical Data by Country Name",
        "description": "Get a country's time series using a country iso code, country ID, or of course, country name. Data is updated every 10 minutes",
        "responses": {
          "200": {
            "description": "Status Ok",
            "schema": {
              "$ref": "#/definitions/countriesHistorical"
            }
          }
        }
      }
    },
    "/v2/historical/{country,country,...}": {
      "get": {
        "tags": [
          "JHUCSSE"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "path",
            "required": true,
            "description": "For this parameter you can use multiple Country Names && Country Ids && ISOs (ISO 2 | ISO 3) 3166 Country Standards separated by commas",
            "type": ""
          },
          {
            "name": "lastdays",
            "in": "query",
            "required": false,
            "default": 30,
            "description": "number of days you want the data to go back to. Default is 30. Use all for full data set. Ex: 15, all, 24",
            "type": "string"
          }
        ],
        "summary": "Get Historical Data by multiple Country Names",
        "description": "Get multiple countrys' time series using multiple country iso codes, country IDs, or of course, country names. Data is updated every 10 minutes",
        "responses": {
          "200": {
            "description": "Status Ok"
          }
        }
      }
    },
    "/v2/historical/{query}/{province}": {
      "get": {
        "tags": [
          "JHUCSSE"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "path",
            "required": true,
            "description": "For this parameter you can use Country Name && Country Id && ISOs (ISO 2 | ISO 3) 3166 Country Standards",
            "type": "string"
          },
          {
            "name": "province",
            "in": "path",
            "required": true,
            "description": "Province name",
            "type": "string"
          },
          {
            "name": "lastdays",
            "in": "query",
            "required": false,
            "default": 30,
            "description": "number of days you want the data to go back to. Default is 30. Use all for full data set. Ex: 15, all, 24",
            "type": "string"
          }
        ],
        "summary": "Get Historical Data by Province Name",
        "description": "Get a province within a country's time series. Example is /v2/historical/chn/tibet. CHN is China's iso3 code. Data is updated every 10 minutes",
        "responses": {
          "200": {
            "description": "Status Ok"
          }
        }
      }
    },
    "/v2/historical/{query}/{province,province,...}": {
      "get": {
        "tags": [
          "JHUCSSE"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "path",
            "required": true,
            "description": "For this parameter you can use multiple Country Names && Country Ids && ISOs (ISO 2 | ISO 3) 3166 Country Standards separated by commas",
            "type": ""
          },
          {
            "name": "provinces",
            "in": "path",
            "required": true,
            "description": "Provinces spelled correctly separated by ',' or '|' delimiters, never both in the same query. ",
            "type": ""
          },
          {
            "name": "lastdays",
            "in": "query",
            "required": false,
            "default": 30,
            "description": "number of days you want the data to go back to. Default is 30. Use all for full data set. Ex: 15, all, 24",
            "type": "string"
          }
        ],
        "summary": "Get Historical Data by multiple Province Names",
        "description": "Get multiple provinces' time series using multiple Country Names && Country Ids && ISOs (ISO 2 | ISO 3) 3166 Country Standards. Data is updated every 10 minutes",
        "responses": {
          "200": {
            "description": "Status Ok"
          }
        }
      }
    },
    "/v2/historical/all": {
      "get": {
        "tags": [
          "JHUCSSE"
        ],
        "parameters": [
          {
            "name": "lastdays",
            "in": "query",
            "required": false,
            "default": 30,
            "description": "number of days you want the data to go back to. Default is 30. Use all for full data set. Ex: 15, all, 24",
            "type": "string"
          }
        ],
        "summary": "Get Historical Data",
        "description": "Return time series data globally. Data is updated every 10 minutes",
        "responses": {
          "200": {
            "description": "Status Ok"
          }
        }
      }
    }
  },
  "definitions": {
    "countryHistorical": {
      "properties": {
        "country": {
          "type": "string"
        },
        "province": {
          "type": "string"
        }
      }
    },
    "countriesHistorical": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/countryHistorical"
      }
    },
    "countryInfo": {
      "required": [
        "country",
        "_id"
      ],
      "properties": {
        "_id": {
          "type": "integer",
          "uniqueItems": true
        },
        "iso2": {
          "type": "string",
          "uniqueItems": true
        },
        "iso3": {
          "type": "string",
          "uniqueItems": true
        },
        "country": {
          "type": "string"
        },
        "lat": {
          "type": "number"
        },
        "long": {
          "type": "number"
        },
        "flag": {
          "type": "string"
        }
      }
    },
    "country": {
      "properties": {
        "country": {
          "type": "string"
        },
        "countryInfo": {
          "$ref": "#/definitions/countryInfo"
        },
        "cases": {
          "type": "integer"
        },
        "todayCases": {
          "type": "integer"
        },
        "deaths": {
          "type": "integer"
        },
        "todayDeaths": {
          "type": "integer"
        },
        "recovered": {
          "type": "integer"
        },
        "active": {
          "type": "integer"
        },
        "critical": {
          "type": "integer"
        },
        "casesPerOneMillion": {
          "type": "number"
        },
        "deathsPerOneMillion": {
          "type": "number"
        },
        "updated": {
          "type": "integer"
        }
      }
    },
    "county": {
      "properties": {
        "country": {
          "type": "string"
        },
        "province": {
          "type": "string"
        },
        "county": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string",
          "format": "date"
        },
        "stats": {
          "confirmed": {
            "type": "integer"
          },
          "deaths": {
            "type": "integer"
          },
          "recovered": {
            "type": "integer"
          }
        },
        "coordinates": {
          "latitude": {
            "type": "string"
          },
          "longitude": {
            "type": "string"
          }
        }
      }
    },
    "usaCounty": {
      "properties": {
        "province": {
          "type": "string"
        },
        "county": {
          "type": "string"
        },
        "timeline": {
          "cases": {
            "type": "integer"
          },
          "deaths": {
            "type": "integer"
          }
        }
      }
    },
    "countries": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/country"
      }
    },
    "counties": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/county"
      }
    },
    "usaCounties": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/usaCounty"
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about this API",
    "url": "https://github.com/NovelCovid/API"
  }
}